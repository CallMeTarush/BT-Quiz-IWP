'use strict';

var P = require('bluebird');
var request = require('superagent');
var ServiceUrlGetter = require('./service-url-getter');
var ServerResponseHandler = require('./server-response-handler');
var logger = require('./logger');

function GoogleAuthorizationFinder(renderingId, forestToken, envSecret, twoFactorRegistration) {
  this.perform = function () {
    return new P(function (resolve, reject) {
      var forestUrl = new ServiceUrlGetter().perform();
      var url = forestUrl + '/liana/v2/renderings/' + renderingId + '/google-authorization';

      if (twoFactorRegistration) {
        url += '?two-factor-registration=' + twoFactorRegistration;
      }

      request.get(url).set('forest-secret-key', envSecret).set('forest-token', forestToken).end(function (error, result) {
        new ServerResponseHandler(error, result).perform().then(function (data) {
          return resolve(data.attributes);
        }).catch(function () {
          logger.error(error);
          reject(new Error());
        });
      });
    });
  };
}

module.exports = GoogleAuthorizationFinder;